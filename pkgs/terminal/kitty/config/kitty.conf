# vim:fileencoding=utf-8:ft=conf:foldmethod=marker

#: Fonts {{{

font_family      family="FiraCode Nerd Font Mono"
bold_font        auto
italic_font      auto
bold_italic_font auto

font_size 16.0

#: Font size (in pts)

disable_ligatures cursor

#: Choose how you want to handle multi-character ligatures. The
#: default is to always render them.  You can tell kitty to not render

#: }}}

#: Cursor customization {{{

cursor_blink_interval 0

#: The interval (in seconds) at which to blink the cursor. Set to zero
#: to disable blinking. Negative values mean use system default. Note
#: that numbers smaller than repaint_delay will be limited to
#: repaint_delay.

#: }}}

#: Mouse {{{

strip_trailing_spaces smart

#: Remove spaces at the end of lines when copying to clipboard. A
#: value of smart will do it when using normal selections, but not
#: rectangle selections. always will always do it.

#: }}}

#: Window layout {{{

enabled_layouts tall,fat,stack

#: The enabled window layouts. A comma separated list of layout names.
#: The special value all means all layouts. The first listed layout
#: will be used as the startup layout. Default configuration is all
#: layouts in alphabetical order. For a list of available layouts, see
#: the https://sw.kovidgoyal.net/kitty/index.html#layouts.

window_border_width 1.0

#: The width of window borders. Can be either in pixels (px) or pts
#: (pt). Values in pts will be rounded to the nearest number of pixels
#: based on screen resolution. If not specified the unit is assumed to
#: be pts. Note that borders are displayed only when more than one
#: window is visible. They are meant to separate multiple windows.

hide_window_decorations yes

#: Hide the window decorations (title-bar and window borders) with
#: yes. On macOS, titlebar-only can be used to only hide the titlebar.
#: Whether this works and exactly what effect it has depends on the
#: window manager/operating system.

#: }}}

#: Tab bar {{{

tab_bar_min_tabs 1

#: The minimum number of tabs that must exist before the tab bar is
#: shown

#: }}}

#: Advanced {{{

allow_remote_control yes

#: Allow other programs to control kitty. If you turn this on other
#: programs can control all aspects of kitty, including sending text
#: to kitty windows, opening new windows, closing windows, reading the
#: content of windows, etc.  Note that this even works over ssh
#: connections. You can chose to either allow any program running
#: within kitty to control it, with yes or only programs that connect
#: to the socket specified with the kitty --listen-on command line
#: option, if you use the value socket-only. The latter is useful if
#: you want to prevent programs running on a remote computer over ssh
#: from controlling kitty.

listen_on unix:/tmp/mykitty
export KITTY_LISTEN_ON=unix:/tmp/mykitty-$PPID

#: Tell kitty to listen to the specified unix/tcp socket for remote
#: control connections. Note that this will apply to all kitty
#: instances. It can be overridden by the kitty --listen-on command
#: line flag. This option accepts only UNIX sockets, such as
#: unix:${TEMP}/mykitty or (on Linux) unix:@mykitty. Environment
#: variables are expanded. If {kitty_pid} is present then it is
#: replaced by the PID of the kitty process, otherwise the PID of the
#: kitty process is appended to the value, with a hyphen. This option
#: is ignored unless you also set allow_remote_control to enable
#: remote control. See the help for kitty --listen-on for more
#: details.

term screen-256color

#: The value of the TERM environment variable to set. Changing this
#: can break many terminal programs, only change it if you know what
#: you are doing, not because you read some advice on Stack Overflow
#: to change it. The TERM variable is used by various programs to get
#: information about the capabilities and behavior of the terminal. If
#: you change it, depending on what programs you run, and how
#: different the terminal you are changing it to is, various things
#: from key-presses, to colors, to various advanced features may not
#: work.

#: }}}

#: OS specific tweaks {{{

macos_option_as_alt both

#: Use the option key as an alt key. With this set to no, kitty will
#: use the macOS native Option+Key = unicode character behavior. This
#: will break any Alt+key keyboard shortcuts in your terminal
#: programs, but you can use the macOS unicode input technique. You
#: can use the values: left, right, or both to use only the left,
#: right or both Option keys as Alt, instead.

#: }}}

#: Keyboard shortcuts {{{

#: Scrolling {{{

map kitty_mod+up        scroll_line_up
map kitty_mod+down      scroll_line_down
map kitty_mod+page_up   scroll_page_up
map kitty_mod+page_down scroll_page_down
map kitty_mod+home      scroll_home
map kitty_mod+end       scroll_end
map kitty_mod+g         show_scrollback

map kitty_mod+n new_os_window
map kitty_mod+w close_window
map kitty_mod+j next_window
map kitty_mod+k previous_window
map kitty_mod+, move_window_forward
map kitty_mod+. move_window_backward
map kitty_mod+` move_window_to_top
map kitty_mod+r start_resizing_window
map kitty_mod+h resize_window narrower
map kitty_mod+l resize_window wider
map kitty_mod+1 first_window
map kitty_mod+2 second_window
map kitty_mod+3 third_window
map kitty_mod+4 fourth_window
map kitty_mod+5 fifth_window
map kitty_mod+6 sixth_window
map kitty_mod+7 seventh_window
map kitty_mod+8 eighth_window
map kitty_mod+9 ninth_window
map kitty_mod+0 tenth_window

#: }}}

#: Tab management {{{

map kitty_mod+]     next_tab
map kitty_mod+[     previous_tab
map kitty_mod+t     new_tab
map kitty_mod+q     close_tab
map kitty_mod+\     move_tab_forward
map kitty_mod+'     move_tab_backward
map kitty_mod+y     set_tab_title

#: }}}

#: Layout management {{{

map kitty_mod+i next_layout
map kitty_mod+o last_used_layout

#: }}}

#: Font sizes {{{

map kitty_mod+equal       change_font_size all +2.0
map kitty_mod+plus        change_font_size all +2.0
map kitty_mod+kp_add      change_font_size all +2.0
map kitty_mod+minus       change_font_size all -2.0
map kitty_mod+kp_subtract change_font_size all -2.0
map kitty_mod+backspace   change_font_size all 0

#: }}}

#: Miscellaneous {{{

map kitty_mod+f      toggle_fullscreen
map kitty_mod+m      toggle_maximized
map kitty_mod+u      kitten unicode_input
map kitty_mod+f2     edit_config_file
map kitty_mod+escape kitty_shell window

#: Open the kitty shell in a new window/tab/overlay/os_window to
#: control kitty using commands.

map kitty_mod+a>m    set_background_opacity +0.1
map kitty_mod+a>l    set_background_opacity -0.1
map kitty_mod+a>1    set_background_opacity 1
map kitty_mod+a>d    set_background_opacity default
map kitty_mod+delete clear_terminal reset active

#: }}}

#: }}}
